name: algemene pipeline

on:
  push:
    paths:
      - 'alle-sam-templates/**'
  delete:
    branches:
      - 'feature**'

env:
  PIPELINE_USER_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  PIPELINE_USER_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TESTING_PIPELINE_EXECUTION_ROLE: arn:aws:iam::492917996281:role/aws-sam-cli-managed-dev-pipe-PipelineExecutionRole-GZ7TGA2NKS0A
  TESTING_CLOUDFORMATION_EXECUTION_ROLE: arn:aws:iam::492917996281:role/aws-sam-cli-managed-dev-p-CloudFormationExecutionR-19T4NVO5DNV58
  TESTING_ARTIFACTS_BUCKET: aws-sam-cli-managed-dev-pipeline-artifactsbucket-1hbdo0jil045z
  TESTING_REGION: eu-west-1

jobs:
  # Job 1: This job is triggered when code is pushed to a branch, and runs unit tests on the code.
  run-unit-tests:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          # trigger the tests here

  # Job 2: This job is triggered when a feature branch is deleted, and deletes any cloudformation stacks associated with that branch.
  delete-feature: 
    if: startsWith(github.event.ref, 'feature') && github.event_name == 'delete'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Delete feature branch stacks
        env:
          FEATURE_BRANCH_NAME: ${{ github.event.ref }}
        run: |
          for dir in alle-sam-templates/*/
            do
              base_stack_name=$(echo ${FEATURE_BRANCH_NAME##*/} | tr -cd '[a-zA-Z0-9-]')
              subfolder_name=$(echo $dir | sed 's:/$::' | sed 's:.*\/::' | tr '_' '-')
              stack_name="${base_stack_name}-${subfolder_name}"
              echo "Deleting stack: $stack_name"
              sam delete \
                --stack-name $stack_name \
                --region ${TESTING_REGION} \
                --no-prompts
            done
  #Job 3: This job is triggered when code is pushed to a feature branch, and builds and deploys any SAM stacks located in subdirectories under alle-sam-templates/.
  build-and-deploy-feature:
    if: startsWith(github.ref, 'refs/heads/feature')
    needs: [run-unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: feature-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy to feature stack in the testing account
        env:
          FEATURE_BRANCH_NAME: ${{ github.ref }}
        shell: bash
        run: |
          for dir in alle-sam-templates/*/
            do
              template_file=$(echo $dir | sed 's:/$::')/template.yaml
              stack_name=$(echo ${FEATURE_BRANCH_NAME##*/} | tr -cd '[a-zA-Z0-9-]')-$(echo $dir | sed 's:/$::' | sed 's:.*\/::' | tr '_' '-')
              sam deploy \
                --stack-name $stack_name \
                --template-file $template_file \
                --capabilities CAPABILITY_IAM \
                --region ${TESTING_REGION} \
                --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
                --no-fail-on-empty-changeset \
                --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE}
            done

  #Job 4: This job is triggered when code is pushed to the main branch, and builds the SAM resources and packages them as a single CloudFormation template.
  build-and-package:
    if: github.ref == 'refs/heads/main'
    needs: [run-unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Build resources
        run: |
          for dir in alle-sam-templates/*/
            do
              template_file=$(echo $dir | sed 's:/$::')/template.yaml
              sam build --template $template_file --use-container
            done

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-packaging
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Upload artifacts to testing artifact buckets
        run: |
          sam package \
            --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
            --region ${TESTING_REGION} \
            --output-template-file packaged-testing.yaml

      - uses: actions/upload-artifact@v2
        with:
          name: packaged-testing.yaml
          path: packaged-testing.yaml

  #Job 5: This job is triggered when build-and-package job has completed, and deploys the packaged SAM resources to a testing environment.
  deploy-testing:
    if: github.ref == 'refs/heads/main'
    needs: [build-and-package]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - uses: actions/download-artifact@v2
        with:
          name: packaged-testing.yaml

      - name: Assume the testing pipeline user role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ env.PIPELINE_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.PIPELINE_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.TESTING_REGION }}
          role-to-assume: ${{ env.TESTING_PIPELINE_EXECUTION_ROLE }}
          role-session-name: testing-deployment
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Deploy to testing account
        run: |
          for dir in alle-sam-templates/*/
            do
              template_file=$(echo $dir | sed 's:/$::')/template.yaml
              stack_name=$(echo $dir | sed 's:/$::' | sed 's:.*\/::' | tr '_' '-')
              sam deploy \
                --stack-name $stack_name \
                --template-file $template_file \
                --capabilities CAPABILITY_IAM \
                --region ${TESTING_REGION} \
                --s3-bucket ${TESTING_ARTIFACTS_BUCKET} \
                --no-fail-on-empty-changeset \
                --role-arn ${TESTING_CLOUDFORMATION_EXECUTION_ROLE}
            done

  #Job 6: This job is triggered when deploy-testing job has completed, and runs integration tests on the deployed SAM resources.
  integration-test:
    if: github.ref == 'refs/heads/main'
    needs: [deploy-testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          # trigger the integration tests here

